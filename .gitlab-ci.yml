# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.10.13

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
  - .cache/pip

before_script:
- python --version ; pip --version # Display Python and pip versions for debugging
- pip install virtualenv
- virtualenv venv
- source venv/bin/activate
# - curl https://ollama.ai/install.sh | sh
# - export OLLAMA_HOST=0.0.0.0:11434
# - ollama serve > /dev/null 2>&1 >output.log 2>&1 &

deploy:
  stage: deploy
  script:
  - |
    # Function to find the latest Python version in /usr/local/lib/python*/site-packages/
    find_latest_python_version() {
        local python_versions=("/usr/local/lib/python*/site-packages/")
        local latest_version=""

        for path in ${python_versions[@]}; do
            local versions=($(ls -1d $path | grep -oP 'python\d+\.\d+' | sort -V))
            if [ ${#versions[@]} -gt 0 ]; then
                latest_version=${versions[-1]}
                break
            fi
        done

        echo "$latest_version"
    }

    # Determine the Python version installed in /usr/local/lib/python*/site-packages/
    python_version=$(find_latest_python_version)

    # Check if Python version was found
    if [ -z "$python_version" ]; then
        echo "Error: Python version not found in /usr/local/lib/python*/site-packages/"
        exit 1
    fi

    # Install 'uv' package globally
    # ollama pull tinyllama:latest

    # Print detected Python version
    echo "Detected Python version: $python_version"

    # Install 'uv' package globally
    pip install uv

    # Copy oterm executable to /usr/local/bin/
    cp .usr/local/bin/oterm /usr/local/bin/

    # Copy oterm package to the determined Python version site-packages directory
    # git clone https://olab.gademo.net/gmali/oterm.git
    # mv oterm /usr/local/lib/$python_version/site-packages/
    cp -r ../oterm /usr/local/lib/$python_version/site-packages/
    cp -r .oterm-0.4.0.dist-info /usr/local/lib/$python_version/site-packages/oterm-0.4.0.dist-info

    # Use 'uv' to install packages from requirements.txt globally
    uv pip install --system -r requirements.txt

    # Optional: Clean up temporary files or perform any post-installation tasks
    chmod +x /usr/local/bin/oterm

    # Run oterm or any other necessary command
    # /usr/local/bin/oterm

  environment:
    name: production
